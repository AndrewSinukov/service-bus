#!/usr/bin/env php
<?php

/**
 * PHP Service Bus (publish-subscribe pattern implementation)
 * Supports Saga pattern and Event Sourcing
 *
 * @author  Maksim Masiukevich <desperado@minsk-info.ru>
 * @license MIT
 * @license https://opensource.org/licenses/MIT
 */

declare(strict_types = 1);

namespace Desperado\ServiceBus\Bin;

use Desperado\ServiceBus\Application\Bootstrap;
use Desperado\ServiceBus\Application\ServiceBusKernel;
use Desperado\ServiceBus\OutboundMessage\Destination;
use Desperado\ServiceBus\Storage\SQL\DoctrineDBAL\DoctrineDBALAdapter;
use Desperado\ServiceBus\Transport\AmqpExt\AmqpQueue;
use Desperado\ServiceBus\Transport\AmqpExt\AmqpTopic;
use Desperado\ServiceBus\Transport\QueueBind;

include __DIR__ . '/../vendor/autoload.php';

$container = Bootstrap::withDotEnv(__DIR__ . '/.env')
    ->useAmqpExtTransport((string) \getenv('TRANSPORT_CONNECTION_DSN'))
    ->useSqlStorage(DoctrineDBALAdapter::class, (string) \getenv('DATABASE_CONNECTION_DSN'))
    ->useCustomCacheDirectory(\sys_get_temp_dir())
    ->boot();

$mainTopic = AmqpTopic::direct((string) \getenv('TRANSPORT_TOPIC'));
$mainQueue = AmqpQueue::create((string) \getenv('TRANSPORT_QUEUE'));

$kernel = new ServiceBusKernel($container);
$kernel
    ->transportConfigurator()
    ->addQueue($mainQueue, new QueueBind($mainTopic, (string) \getenv('TRANSPORT_ROUTING_KEY')))
    ->addDefaultDestinations(
        new Destination(
            (string) \getenv('SENDER_DESTINATION_TOPIC'),
            (string) \getenv('SENDER_DESTINATION_TOPIC_ROUTING_KEY')
        )
    );

$kernel->listen($mainQueue);
